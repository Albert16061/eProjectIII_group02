@model Dr4rum_eProjectIII.Models.Topic

@{
    ViewBag.Title = "Create";
}
<style>
    .hide {
        display:none
    }
</style>

<h2>Create</h2>


@using (Html.BeginForm("Create", "Topics", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Topic</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Topic_Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Topic_Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Topic_Title, "", new { @class = "text-danger" })
            </div>
        </div>
        @*gan cung id se phat sinh loi*@
        <div class="form-group">
            @Html.LabelFor(model => model.Acc_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Acc_ID, new { htmlAttributes = new { @class = "form-control" }})
                @Html.ValidationMessageFor(model => model.Acc_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Category_Name", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hide">
            @Html.LabelFor(model => model.setV, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.setV, new { @checked = "checked", htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.setV, "", new { @class = "text-danger"})*@
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Topic_Info, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Topic_Info)
                @Html.ValidationMessageFor(model => model.Topic_Info, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hide">
            @Html.LabelFor(model => model.Report, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Report, new { @Value = 0, htmlAttributes = new { @class = "form-control" }, disabled = "disabled" })
                @*@Html.ValidationMessageFor(model => model.Report, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group hide">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ 
                    DateTime currentdate = DateTime.Now;
                }
                @Html.TextBoxFor(model => model.date, new {@Value = currentdate, htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Content/ckeditor/ckeditor.js"></script>
    <script src="~/Content/ckfinder/ckfinder.js"></script>
    <script type="text/javascript">
        var editor = CKEDITOR.instances['Topic_Info'];
        if (editor) { editor.destroy(true); }
        CKEDITOR.replace('Topic_Info', { enterMode: CKEDITOR.ENTER_BR, });
        CKFinder.setupCKEditor(null, '@Url.Content("~/Content/ckfinder/")');
    </script>
}
